cmake_minimum_required(VERSION 3.0)

project(OTExtension)

set(CMAKE_CXX_FLAGS_RELEASE "-O2")
set(CMAKE_CXX_FLAGS_DEBUG "-g3 -ggdb")

# Dependencies
find_package(Threads REQUIRED)

find_library(MIRACL_LIBRARY libmiracl.a)
if ((NOT MIRACL_LIBRARY) OR (NOT EXISTS ${MIRACL_LIBRARY}))
    message(FATAL_ERROR "MIRACL library not found")
else()
    message(STATUS "Found MIRACL library: ${MIRACL_LIBRARY}")
endif()
find_library(MIRACL_AUX_LIBRARY libmiracl_aux.a)
if ((NOT MIRACL_AUX_LIBRARY) OR (NOT EXISTS ${MIRACL_AUX_LIBRARY}))
    message(FATAL_ERROR "MIRACL aux library not found")
else()
    message(STATUS "Found MIRACL aux library: ${MIRACL_AUX_LIBRARY}")
endif()
find_path(MIRACL_INCLUDE_DIR miracl_lib/miracl.h)
if ((NOT MIRACL_INCLUDE_DIR) OR (NOT EXISTS ${MIRACL_INCLUDE_DIR}))
    message(FATAL_ERROR "MIRACL include dir not found")
else()
    message(STATUS "Found MIRACL include dir: ${MIRACL_INCLUDE_DIR}")
endif()

set(OTEXT_SOURCES
    ot/alsz-ot-ext-rec.cpp
    ot/alsz-ot-ext-snd.cpp
    ot/asharov-lindell.cpp
    ot/iknp-ot-ext-rec.cpp
    ot/iknp-ot-ext-snd.cpp
    ot/kk-ot-ext-rec.cpp
    ot/kk-ot-ext-snd.cpp
    ot/naor-pinkas.cpp
    ot/naor-pinkas_noro.cpp
    ot/nnob-ot-ext-rec.cpp
    ot/nnob-ot-ext-snd.cpp
    ot/ot-ext.cpp
    ot/ot-ext-rec.cpp
    ot/ot-ext-snd.cpp
    ot/pvwddh.cpp
    ot/simpleot.cpp
    util/cbitvector.cpp
    util/crypto/crypto.cpp
    util/crypto/ecc-pk-crypto.cpp
    util/crypto/gmp-pk-crypto.cpp
    util/crypto/intrin_sequential_enc8.cpp
    util/crypto/TedKrovetzAesNiWrapperC.cpp
    util/parse_options.cpp
)


add_library(otextension ${OTEXT_SOURCES})
# allow relative includes: #include "../miracl_lib/...h"
target_include_directories(otextension PRIVATE ${MIRACL_INCLUDE_DIR}/dummy_include_dir)

set(LIBRARIES
    otextension
    ${MIRACL_AUX_LIBRARY} ${MIRACL_LIBRARY}
    Threads::Threads ssl crypto gmp gmpxx
)

add_executable(ot.exe mains/otmain.cpp)
target_include_directories(ot.exe PRIVATE ${MIRACL_INCLUDE_DIR}/dummy_include_dir)
target_link_libraries(ot.exe ${LIBRARIES})

add_executable(test.exe mains/test.cpp)
target_link_libraries(test.exe ${LIBRARIES})
target_include_directories(test.exe PRIVATE ${MIRACL_INCLUDE_DIR}/dummy_include_dir)

install(TARGETS otextension
    EXPORT OTExtension
    RUNTIME DESTINATION "bin"
    LIBRARY DESTINATION "lib"
    ARCHIVE DESTINATION "lib"
)

install(FILES ${OTEXT_HEADER} DESTINATION "include/ot")
install(DIRECTORY ${CMAKE_CURRENT_SOURCE_DIR}/ot DESTINATION include
        FILES_MATCHING PATTERN "*.h")
install(DIRECTORY ${CMAKE_CURRENT_SOURCE_DIR}/util DESTINATION include
        FILES_MATCHING PATTERN "*.h")
